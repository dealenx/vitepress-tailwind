#!/usr/bin/env node

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

async function main() {
    try {
        console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ VitePress —Å Tailwind CSS...');

        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞
        const projectName = process.argv[2];
        if (!projectName) {
            console.error('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞');
            process.exit(1);
        }

        // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
        if (!fs.existsSync(projectName)) {
            fs.mkdirSync(projectName);
        }
        process.chdir(projectName);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º VitePress
        console.log('üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VitePress...');
        execSync('npx vitepress init', { stdio: 'inherit' });

        // –û–±–Ω–æ–≤–ª—è–µ–º package.json
        console.log('üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json...');
        const packageJsonPath = 'package.json';
        const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf-8'));

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º devDependencies
        packageJson.devDependencies = {
            ...packageJson.devDependencies,
            "vitepress": "^1.6.3",
            "vue": "^3.3.4",
            '@tailwindcss/postcss': '^4.1.3',
            '@tailwindcss/vite': '^4.1.3',
            'tailwindcss': '^4.1.3'
        };

        fs.writeFileSync(
            packageJsonPath,
            JSON.stringify(packageJson, null, 2)
        );

        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Tailwind
        console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Tailwind CSS...');
        const tailwindConfig = {
            content: [
                './docs/**/*.{vue,js,ts,jsx,tsx,md}',
                './.vitepress/**/*.{vue,js,ts,jsx,tsx,md}',
            ],
            theme: {
                extend: {},
            },
            plugins: [],
        };

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        const getConfigPath = (baseName) => {
            const extensions = ['.mts', '.mjs', '.ts', '.js'];
            for (const ext of extensions) {
                const path = `${baseName}${ext}`;
                if (fs.existsSync(path)) return path;
            }
            return `${baseName}.js`; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º .js
        };

        const tailwindConfigPath = getConfigPath('tailwind.config');
        const postcssConfigPath = getConfigPath('postcss.config');

        fs.writeFileSync(
            tailwindConfigPath,
            `export default ${JSON.stringify(tailwindConfig, null, 2)}`
        );

        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PostCSS
        const postcssConfig = {
            plugins: {
                tailwindcss: {},
                autoprefixer: {},
            },
        };

        fs.writeFileSync(
            postcssConfigPath,
            `export default ${JSON.stringify(postcssConfig, null, 2)}`
        );

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VitePress
        console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VitePress...');

        const vitepressConfigPath = getConfigPath('.vitepress/config');
        const vitepressConfig = fs.readFileSync(vitepressConfigPath, 'utf-8');

        const updatedConfig = vitepressConfig.replace(
            'export default defineConfig({',
            `export default defineConfig({
  vite: {
    css: {
      postcss: {
        plugins: [
          (await import('tailwindcss')).default,
          (await import('autoprefixer')).default,
        ],
      },
    },
  },`
        );

        fs.writeFileSync(vitepressConfigPath, updatedConfig);

        // –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π CSS —Ñ–∞–π–ª
        const globalCssPath = '.vitepress/theme/style.css';
        fs.writeFileSync(
            globalCssPath,
            `@tailwind base;
@tailwind components;
@tailwind utilities;`
        );

        console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
        console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
        console.log('1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞: cd ' + projectName);
        console.log('2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install');
        console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: npm run docs:dev');
        console.log('4. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5173 –≤ –±—Ä–∞—É–∑–µ—Ä–µ');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞:', error);
        process.exit(1);
    }
}

main(); 